name: Merge
description: Merges the PR when approved

on:
  pull_request_review:
    types:
    - submitted

jobs:
  merge:
    if: ${{ github.event.review.state == 'approved' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Merge
      env:
        GH_TOKEN: ${{ github.token }}
        BODY: ${{ github.event.pull_request.body }}
      shell: bash
      run: |
        gh pr merge \
          ${{ github.event.pull_request.number }} \
          --repo "$GITHUB_REPOSITORY" \
          --subject "${{ github.event.pull_request.title }}" \
          --body "$BODY" \
          --auto \
          ${{ github.event.pull_request.base.ref
              == github.event.repository.default_branch
              && '--squash' || '--merge'}} \
          ${{ github.event.pull_request.base.ref
              != github.event.repository.default_branch
              && '--delete-branch \' || '' }}
    - name: Checkout
      if: github.event.pull_request.base.ref
          == github.event.repository.default_branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.base.ref }}
    - name: Refresh
      if: github.event.pull_request.base.ref
          == github.event.repository.default_branch
      run: |
        git push origin \
          "+${{ github.event.pull_request.base.ref
               }}:${{ github.event.pull_request.head.ref }}"
  create-pr:
    needs:
    - merge
    if: github.event.pull_request.base.ref
        != github.event.repository.default_branch
    uses: ./.github/workflows/create_pr_from_version.yaml
    permissions:
       pull-requests: write
       contents: read
    with:
      version-from: 'version-file'
      head: ${{ github.event.pull_request.base.ref }}
      base: ${{ github.event.pull_request.base.ref == 'dev'
                && github.event.repository.default_branch
                || 'dev' }}
      prefix: ${{ github.event.pull_request.base.ref == 'dev'
                  && 'v' || format('{0} v', github.ref_name) }}
  check-is-release:
    needs:
    - merge
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Count matching paths
      id: paths
      env:
        PATTERN: 'action.yaml|version.txt|README.md'
      run: |
        echo "matches=$( \
          git diff --name-only \
            ${{ github.event.pull_request.base.sha }} \
            ${{ github.event.pull_request.head.sha }} \
          | grep -c $PATTERN )" \
        >> "$GITHUB_OUTPUT"
    outputs:
      matches: ${{ steps.paths.outputs.matches }}
  release:
    needs:
    - check-is-release
    if: github.event.pull_request.base.ref
        == github.event.repository.default_branch
        && needs.check-is-release.outputs.matches
    uses: ./.github/workflows/release.yaml
    permissions:
      contents: write
      pull-requests: write
